services:
  # Frontend
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=http://localhost:5003/v1
      - REACT_APP_BROWSER_OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
    depends_on:
      - otel-collector
    ports:
      - "3000:3000"

  # Python Backend
  backend-python:
    container_name: backend-python
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:DevPassword123!@postgres:5432/docqueryservice
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-http://otel-collector:4317}
      - OTEL_SERVICE_NAME=docquery-backend-python
      - OPENAI_API_KEY=${OPENAI_API_KEY:-default_openai_key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-default_anthropic_key}
    depends_on:
      - postgres
      - otel-collector
    ports:
      - "5002:5002"

  # dotnet Backend
  backend-dotnet:
    container_name: backend-dotnet
    build:
      context: ./backend-dotnet
      dockerfile: Dockerfile
    environment:
      - DATABASE_CONNECTION_STRING=Host=postgres;Port=5432;Database=docqueryservice;Username=postgres;Password=DevPassword123!
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-http://otel-collector:4317}
      - OTEL_SERVICE_NAME=docquery-backend-dotnet
      - OPENAI_API_KEY=${OPENAI_API_KEY:-default_openai_key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-default_anthropic_key}
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgres
      - otel-collector
    ports:
      - "5003:8080"

  # Postgres Database
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=DevPassword123!
      - POSTGRES_DB=docqueryservice
    ports:
      - "5432:5432"
    volumes:
      # If we want to data to persist, uncomment this. 
      # Leave it commented and database will be reset on each restart.
      # - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-sql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  # OpenTelemetry Collector
  otel-collector:
    container_name: otel-collector
    build:
      context: ./otel-collector
      dockerfile: Dockerfile
    environment:
      - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
      - HONEYCOMB_DATASET=${HONEYCOMB_DATASET}
      - ENVIRONMENT=development
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
    volumes:
      - ./otel-collector/config.yaml:/etc/otelcol/config.yaml      

volumes:
  postgres_data:
    driver: local
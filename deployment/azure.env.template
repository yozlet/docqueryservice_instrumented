# Azure Environment Configuration Template
# Copy this file to azure.env and customize with your specific values
# This template supports both container and non-container Azure deployments
# 
# Note: This template is automatically updated by deploy-azure.sh to stay current

# ========================================
# Azure Infrastructure Configuration
# ========================================

# Azure Subscription and Resource Configuration
AZURE_SUBSCRIPTION_ID=your-subscription-id-here
AZURE_RESOURCE_GROUP=docquery-rg
AZURE_LOCATION=eastus

# App Service Configuration
AZURE_APP_SERVICE_PLAN=docquery-plan
AZURE_APP_NAME=docquery-api
AZURE_SKU=B1  # Options: F1 (Free), B1 (Basic), S1 (Standard), P1 (Premium)

# Azure Database for PostgreSQL Configuration
AZURE_POSTGRES_SERVER_NAME=docquery-postgres-server
AZURE_POSTGRES_DATABASE_NAME=docqueryservice
AZURE_POSTGRES_ADMIN_USER=pgadmin
AZURE_POSTGRES_ADMIN_PASSWORD=YourSecurePassword123!
AZURE_POSTGRES_SKU=Standard_B1ms  # Options: Standard_B1ms, Standard_B2s, Standard_D2s_v3, etc.
AZURE_POSTGRES_TIER=Burstable  # Options: Burstable, GeneralPurpose, MemoryOptimized
AZURE_POSTGRES_VERSION=14  # Options: 11, 12, 13, 14, 15
AZURE_POSTGRES_STORAGE_SIZE=32  # Storage size in GB (32-16384)

# ========================================
# Application Configuration
# ========================================

# Frontend Configuration
FRONTEND_DOMAIN=docquery.yourdomain.com
FRONTEND_URL=https://docquery.yourdomain.com
BACKEND_URL=https://docquery-api.azurewebsites.net

# Backend Configuration
BACKEND_HOST=docquery-api.azurewebsites.net
BACKEND_PORT=443
ASPNETCORE_ENVIRONMENT=Production

# ========================================
# Database Connection Configuration
# ========================================

# Option 1: Full Connection String (recommended for production)
DATABASE_CONNECTION_STRING="Host=docquery-postgres-server.postgres.database.azure.com;Database=docqueryservice;Username=pgadmin;Password=YourSecurePassword123!;SSL Mode=Require;Trust Server Certificate=true;"

# Option 2: Individual Database Settings (alternative approach)
DB_SERVER=docquery-postgres-server.postgres.database.azure.com
DB_PORT=5432
DB_DATABASE=docqueryservice
DB_USERNAME=pgadmin
DB_PASSWORD=YourSecurePassword123!

# ========================================
# Monitoring & Observability Configuration
# ========================================

# OpenTelemetry Configuration (Honeycomb.io)
OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io
OTEL_EXPORTER_OTLP_HEADERS="x-honeycomb-team=your-honeycomb-api-key"
HONEYCOMB_API_KEY=your-honeycomb-api-key
HONEYCOMB_FRONTEND_DATASET=docquery-frontend-azure-prod
HONEYCOMB_BACKEND_DATASET=docquery-backend-azure-prod
OTEL_SERVICE_NAME=docquery-backend-azure
OTEL_RESOURCE_ATTRIBUTES=service.version=1.0.0,deployment.environment=production

# ========================================
# Azure Blob Storage Configuration
# ========================================

# Storage Account Configuration
AZURE_STORAGE_ACCOUNT_NAME=docquerystorage2025
AZURE_STORAGE_CONTAINER_NAME=pdfs
AZURE_STORAGE_SKU=Standard_LRS  # Options: Standard_LRS, Standard_GRS, Standard_RAGRS, Premium_LRS
AZURE_STORAGE_ACCESS_TIER=Hot   # Options: Hot, Cool, Archive

# Storage Connection (will be auto-generated during deployment)
# Format: DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=...;AccountKey=...;BlobEndpoint=...
AZURE_STORAGE_CONNECTION_STRING="your-storage-connection-string-here"

# PDF Downloader Storage Configuration
PDF_STORAGE_TYPE=azure_blob  # Options: local, azure_blob
PDF_STORAGE_CONTAINER=pdfs
PDF_STORAGE_CREATE_CONTAINER=true

# ========================================
# Security Configuration
# ========================================

# CORS Configuration
CORS_ORIGIN=https://docquery.yourdomain.com
ALLOWED_CONNECT_ORIGINS="https://docquery-api.azurewebsites.net"

# ========================================
# Feature Flags
# ========================================

# Application Features
ENABLE_METRICS=true

# ========================================
# Azure-specific App Service Settings
# ========================================

# App Service Runtime Configuration
WEBSITES_ENABLE_APP_SERVICE_STORAGE=false
WEBSITES_PORT=5001

# ========================================
# Deployment Configuration
# ========================================

# Deployment Options
CREATE_RESOURCE_GROUP=true  # Set to false if using existing resource group
CREATE_AZURE_POSTGRES=true  # Set to false if using existing PostgreSQL database
CREATE_APP_SERVICE_PLAN=true  # Set to false if using existing plan
CREATE_APP_SERVICE=true  # Set to false if using existing app service
CREATE_STORAGE_ACCOUNT=true  # Set to false if using existing storage account
ENABLE_FIREWALL_RULES=true  # Allow Azure services to access PostgreSQL server
